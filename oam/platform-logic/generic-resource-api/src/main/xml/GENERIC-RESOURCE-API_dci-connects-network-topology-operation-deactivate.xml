<?xml version="1.0" encoding="UTF-8"?>
<service-logic xmlns="http://www.onap.org/sdnc/svclogic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.onap.org/sdnc/svclogic ./svclogic.xsd" module="GENERIC-RESOURCE-API" version="${project.version}">
   <method rpc="dci-connects-network-topology-operation-deactivate" mode="sync">
      <block atomic="true">
         <call module="GENERIC-RESOURCE-API" rpc="validate-network-input-parameters" mode="sync" />
         <block atomic="true">
            <for index="idx" start="0" end="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param_length`">
               <block>
                  <switch test="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].name == 'site1_id'`">
                     <outcome value="true">
                        <set>
                           <parameter name="prop.dci-connects.id" value="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].value`" />
                        </set>
                     </outcome>
                  </switch>
                  <switch test="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].name == 'tunnelType'`">
                     <outcome value="true">
                        <set>
                           <parameter name="prop.dci-connects.tunnelType" value="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].value`" />
                        </set>
                     </outcome>
                  </switch>
               </block>
            </for>
            <block atomic="true">
               <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" resource="esr-thirdparty-sdnc" key="esr-thirdparty-sdnc.thirdparty-sdnc-id = $prop.dci-connects.id AND         depth = '1'" pfx="tmp.aai.esr-thirdparty-sdnc" local-only="false">
                  <outcome value="success">
                     <set>
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.url" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].service-url`" />
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.user" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].user-name`" />
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.password" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].password`" />
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.vendor" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].vendor`" />
                     </set>
                  </outcome>
                  <outcome value="not-found">
                     <return status="failure">
                        <parameter name="error-code" value="" />
                        <parameter name="error-message" value="" />
                     </return>
                  </outcome>
                  <outcome value="Other">
                     <return status="failure">
                        <parameter name="error-code" value="" />
                        <parameter name="error-message" value="" />
                     </return>
                  </outcome>
               </get-resource>
               <execute plugin="org.onap.ccsdk.sli.plugins.prop.PropertiesNode" method="readProperties">
                  <parameter name="fileName" value="%SDNC_CONFIG_DIR%/generic-resource-api-dg.properties" />
                  <parameter name="contextPrefix" value="prop" />
               </execute>
               <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                  <parameter name="logger" value="message-log" />
                  <parameter name="field1" value="__TIMESTAMP__" />
                  <parameter name="field2" value="dci-network-topology-operation-deactivate" />
                  <parameter name="field3" value="dci-connects.id" />
                  <parameter name="field4" value="`$prop.dci-connects.id`" />
                  <parameter name="field5" value="dci-connects.tunnelType" />
                  <parameter name="field6" value="`$prop.dci-connects.tunnelType`" />
                  <parameter name="field7" value="dci-connects.tunnelType" />
                  <parameter name="field8" value="`$prop.dci-connects.tunnelType`" />
                  <parameter name="field9" value="sdncRestApi.thirdpartySdnc.url" />
                  <parameter name="field10" value="`$prop.sdncRestApi.thirdpartySdnc.url`" />
               </record>
               <switch test="`$prop.sdncRestApi.thirdpartySdnc.vendor`">
                  <outcome value="SPTN">
                     <switch test="`$prop.dci-connects.tunnelType`">
                        <outcome value="L3-DCI">
                           <execute plugin="org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode" method="sendRequest">
                              <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/v2.0/l3-dci-connects/' + $prop.dci-connects.id`" />
                              <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                              <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                              <parameter name="format" value="json" />
                              <parameter name="httpMethod" value="delete" />
                              <parameter name="responsePrefix" value="restapi-result" />
                           </execute>
                        </outcome>
                        <outcome value="L2-DCI">
                           <execute plugin="org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode" method="sendRequest">
                              <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/v2.0/l2-dci-connects/' + $prop.dci-connects.id`" />
                              <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                              <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                              <parameter name="format" value="json" />
                              <parameter name="httpMethod" value="delete" />
                              <parameter name="responsePrefix" value="restapi-result" />
                           </execute>
                        </outcome>
                     </switch>
                  </outcome>
               </switch>
            </block>
         </block>
         <block atomic="true">
            <for index="idx" start="0" end="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param_length`">
               <block>
                  <switch test="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].name == 'site2_id'`">
                     <outcome value="true">
                        <set>
                           <parameter name="prop.dci-connects.id" value="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].value`" />
                        </set>
                     </outcome>
                  </switch>
               </block>
            </for>
            <block atomic="true">
               <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" resource="esr-thirdparty-sdnc" key="esr-thirdparty-sdnc.thirdparty-sdnc-id = $prop.dci-connects.id AND         depth = '1'" pfx="tmp.aai.esr-thirdparty-sdnc" local-only="false">
                  <outcome value="success">
                     <set>
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.url" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].service-url`" />
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.user" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].user-name`" />
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.password" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].password`" />
                        <parameter name="prop.sdncRestApi.thirdpartySdnc.vendor" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].vendor`" />
                     </set>
                  </outcome>
                  <outcome value="not-found">
                     <return status="failure">
                        <parameter name="error-code" value="" />
                        <parameter name="error-message" value="" />
                     </return>
                  </outcome>
                  <outcome value="Other">
                     <return status="failure">
                        <parameter name="error-code" value="" />
                        <parameter name="error-message" value="" />
                     </return>
                  </outcome>
               </get-resource>
               <execute plugin="org.onap.ccsdk.sli.plugins.prop.PropertiesNode" method="readProperties">
                  <parameter name="fileName" value="%SDNC_CONFIG_DIR%/generic-resource-api-dg.properties" />
                  <parameter name="contextPrefix" value="prop" />
               </execute>
               <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                  <parameter name="logger" value="message-log" />
                  <parameter name="field1" value="__TIMESTAMP__" />
                  <parameter name="field2" value="dci-network-topology-operation-deactivate" />
                  <parameter name="field3" value="dci-connects.id" />
                  <parameter name="field4" value="`$prop.dci-connects.id`" />
                  <parameter name="field5" value="dci-connects.tunnelType" />
                  <parameter name="field6" value="`$prop.dci-connects.tunnelType`" />
                  <parameter name="field7" value="dci-connects.tunnelType" />
                  <parameter name="field8" value="`$prop.dci-connects.tunnelType`" />
                  <parameter name="field9" value="sdncRestApi.thirdpartySdnc.url" />
                  <parameter name="field10" value="`$prop.sdncRestApi.thirdpartySdnc.url`" />
               </record>
               <switch test="`$prop.sdncRestApi.thirdpartySdnc.vendor`">
                  <outcome value="SPTN">
                     <switch test="`$prop.dci-connects.tunnelType`">
                        <outcome value="L3-DCI">
                           <execute plugin="org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode" method="sendRequest">
                              <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/v2.0/l3-dci-connects/' + $prop.dci-connects.id`" />
                              <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                              <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                              <parameter name="format" value="json" />
                              <parameter name="httpMethod" value="delete" />
                              <parameter name="responsePrefix" value="restapi-result" />
                           </execute>
                        </outcome>
                        <outcome value="L2-DCI">
                           <execute plugin="org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode" method="sendRequest">
                              <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/v2.0/l2-dci-connects/' + $prop.dci-connects.id`" />
                              <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                              <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                              <parameter name="format" value="json" />
                              <parameter name="httpMethod" value="delete" />
                              <parameter name="responsePrefix" value="restapi-result" />
                           </execute>
                        </outcome>
                     </switch>
                  </outcome>
               </switch>
            </block>
         </block>
         <delete plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" resource="configuration" key="configuration.configuration-id = $network-topology-operation-input.network-information.network-id" />
         <switch test="`$service-data.networks.network_length`">
            <outcome value="1">
               <block atomic="true">
                  <set>
                     <parameter name="service-data.networks." value="" />
                  </set>
                  <set>
                     <parameter name="service-data.networks.network_length" value="0" />
                  </set>
               </block>
            </outcome>
            <outcome value="Other">
               <block atomic="true">
                  <set>
                     <parameter name="tmp.new_length" value="`$service-data.networks.network_length - 1`" />
                  </set>
                  <for silentFailure="true" index="snidx" start="`$tmp.nidx + 1`" end="`$service-data.networks.network_length`">
                     <block atomic="true" />
                  </for>
                  <set>
                     <parameter name="service-data.networks.network_length" value="`$service-data.networks.network_length - 1`" />
                  </set>
                  <set>
                     <parameter name="service-data.networks.network[$tmp.new_length]." value="" />
                  </set>
               </block>
            </outcome>
         </switch>
         <set>
            <parameter name="networkId" value="`$network-topology-operation-input.network-information.network-id`" />
            <parameter name="service-object-path" value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'  + $network-topology-operation-input.service-information.service-instance-id  + '/service-data/service-topology/'` " />
         </set>
         <return status="success">
            <parameter name="ack-final-indicator" value="Y" />
            <parameter name="error-code" value="200" />
            <parameter name="error-message" value="`$error-message`" />
         </return>
      </block>
   </method>
</service-logic>
