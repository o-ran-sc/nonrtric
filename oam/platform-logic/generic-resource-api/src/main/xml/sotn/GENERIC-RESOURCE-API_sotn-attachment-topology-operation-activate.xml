<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='sotn-attachment-topology-operation-activate' mode='sync'>
        <block atomic="true">
            <set>
                <parameter name='tmp.ar.allotted-resource-id' value='`$connection-attachment-topology-operation-input.allotted-resource-information.allotted-resource-id`' />
                <parameter name='tmp.ar.parent-service-instance-id' value='`$connection-attachment-topology-operation-input.allotted-resource-information.parent-service-instance-id`' />
            </set>
            <set>
                <parameter name='tmp.ar.self-link' value="`'restconf/config/GENERIC-RESOURCE-API:connection-attachment-allotted-resources/connection-attachment-allotted-resource/'
 + $tmp.ar.allotted-resource-id
 + '/allotted-resource-data/connection-attachment-topology/'` " />
            </set>
            <execute plugin='org.onap.ccsdk.sli.plugins.prop.PropertiesNode' method='readProperties' >
                <parameter name='fileName' value='%SDNC_CONFIG_DIR%/generic-resource-api-dg.properties' />
                <parameter name='contextPrefix' value='prop' />
            </execute>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='replace' >
                <parameter name="source" value="`$prop.restapi.connection-attachment-allottedresource`"/>
                <parameter name="outputPath" value="tmp.ar-url"/>
                <parameter name="target" value="{allotted-resource-id}"/>
                <parameter name="replacement" value="`$tmp.ar.allotted-resource-id`"/>
            </execute>
            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                <parameter name='restapiUrl' value='`$prop.controller.url + $tmp.ar-url`' />
                <parameter name='restapiUser' value='`$prop.controller.user`' />
                <parameter name='restapiPassword' value='`$prop.controller.pwd`' />
                <parameter name='format' value='json' />
                <parameter name='httpMethod' value='GET' />
                <parameter name="responsePrefix" value="mdsal-ar" />
                <outcome value='success'>
                    <block atomic="true">
                        <switch test='`$mdsal-ar.connection-attachment-allotted-resource_length`'>
                            <outcome value='1'>
                                <block atomic='true'>
                                    <set>
                                        <parameter name='connection-attachment-ar.' value='$mdsal-ar.connection-attachment-allotted-resource[0].' />
                                    </set>
                                    <switch test='`$connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.order-status`'>
                                        <outcome value='Created'>
                                            <block></block>
                                        </outcome>
                                        <outcome value='PendingDelete'>
                                            <block></block>
                                        </outcome>
                                        <outcome value='Other'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" 
    value="`'Existing connection-attachment-allotted-resource with order status of ' + $connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.order-status + '.'`" />
                                            </return>
                                        </outcome>
                                    </switch>
                                    <set>
                                        <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.last-action' value='`$connection-attachment-ar.allotted-resource-data.allotted-resource-operation-information.request-information.request-action`' />
                                        <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.last-rpc-action' value='`$connection-attachment-ar.allotted-resource-status.rpc-action`' />
                                        <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.last-svc-request-id' value='`$connection-attachment-ar.allotted-resource-data.allotted-resource-operation-information.sdnc-request-header.svc-request-id`' />
                                    </set>
                                </block>
                            </outcome>
                            <outcome value='Other'>
                                <return status='failure'>
                                    <parameter name='ack-final' value='Y'/>
                                    <parameter name="error-code" value="404" />
                                    <parameter name="error-message" value="Error: Connection attachment resource not exist" />
                                </return>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
                <outcome value='Other'>
                    <block atomic="true">
                        <return status='failure'>
                            <parameter name='ack-final' value='Y'/>
                            <parameter name="error-code" value="404" />
                            <parameter name="error-message" value="Error: Connection attachment resource not exist" />
                        </return>
                    </block>
                </outcome>
            </execute>
            <block atomic="true">
                <call module='GENERIC-RESOURCE-API' rpc='sotn-get-saved-ar-param' mode='sync' ></call>
            </block>
            <set>
                <parameter name='tmp.ar.parent-service-instance-id' value="`$connection-attachment-topology-operation-input.allotted-resource-information.parent-service-instance-id` " />
            </set>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='replace' >
                <parameter name="source" value="/restconf/config/GENERIC-RESOURCE-API:services/service/{service-instance-id}/service-data"/>
                <parameter name="outputPath" value="tmp.ar-url-psd"/>
                <parameter name="target" value="{service-instance-id}"/>
                <parameter name="replacement" value="`$tmp.ar.parent-service-instance-id`"/>
            </execute>
            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                <parameter name='restapiUrl' value='`$prop.controller.url + $tmp.ar-url-psd`' />
                <parameter name='restapiUser' value='`$prop.controller.user`' />
                <parameter name='restapiPassword' value='`$prop.controller.pwd`' />
                <parameter name='format' value='json' />
                <parameter name='httpMethod' value='GET' />
                <parameter name="responsePrefix" value="mdsal-psd" />
                <outcome value='success'>
                    <block></block>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="404" />
                        <parameter name="error-message" value="Error: Parent service data not available" />
                    </return>
                </outcome>
            </execute>
            <set>
                <parameter name='tmp.found-in-ar' value='false' />
                <parameter name='tmp.found-in-network' value='false' />
                <parameter name='tmp.ep-available' value='false' />
            </set>
            <switch test='`$mdsal-psd.service-data.provided-allotted-resources.provided-allotted-resource_length`'>
                <outcome value='2'>
                    <block atomic="true">
                        <for index='pidx' start='0' end='`$mdsal-psd.service-data.provided-allotted-resources.provided-allotted-resource_length`' >
                            <switch test="`$mdsal-psd.service-data.provided-allotted-resources.provided-allotted-resource[$pidx].allotted-resource-id == $tmp.ar.allotted-resource-id`">
                                <outcome value='true'>
                                    <block></block>
                                </outcome>
                                <outcome value='false'>
                                    <block atomic="true">
                                        <set>
                                            <parameter name='tmp.pidx' value='`$pidx`' />
                                            <parameter name='tmp.provided-ar.' value='`$mdsal-psd.service-data.provided-allotted-resources.provided-allotted-resource[$pidx].`' />
                                            <parameter name='tmp.found-in-ar' value='true' />
                                            <parameter name='tmp.ep-available' value='true' />
                                        </set>
                                    </block>
                                </outcome>
                            </switch>
                        </for>
                        <switch test='`$tmp.found-in-ar`'>
                            <outcome value='true'>
                                <block atomic="true">
                                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='replace' >
                                        <parameter name="source" value="`$prop.restapi.connection-attachment-allottedresource`"/>
                                        <parameter name="outputPath" value="tmp.ar-other-url-connection"/>
                                        <parameter name="target" value="{allotted-resource-id}"/>
                                        <parameter name="replacement" value="`$tmp.provided-ar.allotted-resource-id`"/>
                                    </execute>
                                    <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                        <parameter name='restapiUrl' value='`$prop.controller.url + $tmp.ar-other-url-connection`' />
                                        <parameter name='restapiUser' value='`$prop.controller.user`' />
                                        <parameter name='restapiPassword' value='`$prop.controller.pwd`' />
                                        <parameter name='format' value='json' />
                                        <parameter name='httpMethod' value='GET' />
                                        <parameter name="responsePrefix" value="mdsal-other-ar" />
                                        <outcome value='success'>
                                            <block></block>
                                        </outcome>
                                        <outcome value='Other'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="404" />
                                                <parameter name="error-message" value="Error: SOTN provided attachment resource not found" />
                                            </return>
                                        </outcome>
                                    </execute>
                                </block>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
                <outcome value='1'>
                    <block atomic="true">
                        <switch test='`$mdsal-psd.service-data.networks.network_length`'>
                            <outcome value='1'>
                                <block atomic="true">
                                    <set>
                                        <parameter name='tmp.network.' value='`$mdsal-psd.service-data.networks.network[0].`' />
                                    </set>
                                    <for index='nidx' start='0' end='`$tmp.network.network-data.network-request-input.network-input-parameters.param_length`' >
                                        <block>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'access-node-id'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='tmp.found-in-network' value='true' />
                                                        <parameter name='tmp.ep-available' value='true' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'name'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-name' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                        <parameter name='ietf-eth-tran-service_etht-svc.globals.etht-svc-bandwidth-profiles[0].bandwidth-profile-name' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                        <parameter name='ietf-eth-tran-service:etht-svc.etht-svc-instances[0].etht-svc-access-ports[0].ingress-egress-bandwidth-profile-name' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                        <parameter name='ietf-eth-tran-service:etht-svc.etht-svc-instances[0].etht-svc-access-ports[1].ingress-egress-bandwidth-profile-name' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'description'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='prop.global.sotn.etht-svc-descr' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'tenantId'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='prop.global.sotn.tenantId' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'vpnType'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='prop.global.sotn.vpnType' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'cir'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='ietf-eth-tran-service_etht-svc.globals.etht-svc-bandwidth-profiles[0].CIR' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'eir'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='ietf-eth-tran-service_etht-svc.globals.etht-svc-bandwidth-profiles[0].EIR' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'colorAware'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='ietf-eth-tran-service_etht-svc.globals.etht-svc-bandwidth-profiles[0].color-aware' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test="`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].name == 'couplingFlag'`">
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='ietf-eth-tran-service_etht-svc.globals.etht-svc-bandwidth-profiles[0].coupling-flag' value='`$tmp.network.network-data.network-request-input.network-input-parameters.param[$nidx].value`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <return status='success'>
                                                <parameter name="ack-final-indicator" value="Y" />
                                                <parameter name="error-code" value="200" />
                                                <parameter name="error-message" value="`$error-message`" />
                                            </return>
                                        </block>
                                    </for>
                                </block>
                            </outcome>
                            <outcome value='Other'>
                                <return status='failure'>
                                    <parameter name='ack-final' value='Y'/>
                                    <parameter name="error-code" value="404" />
                                    <parameter name="error-message" value="Error: Incorrect state found more then 1 network" />
                                </return>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="404" />
                        <parameter name="error-message" value="Error: End points not available" />
                    </return>
                </outcome>
            </switch>
            <switch test='`$tmp.ep-available`'>
                <outcome value='false'>
                    <block></block>
                </outcome>
                <outcome value='true'>
                    <block atomic="true">
                        <switch test='`$tmp.found-in-ar`'>
                            <outcome value='true'>
                                <block atomic="true">
                                    <set>
                                        <parameter name='tmp.ep.parameters.' value='`$mdsal-other-ar.connection-attachment-allotted-resource[0].allotted-resource-data.allotted-resource-operation-information.connection-attachment-request-input.`' />
                                    </set>
                                </block>
                            </outcome>
                            <outcome value='false'>
                                <block atomic="true">
                                    <set>
                                        <parameter name='tmp.ep.parameters.' value='`$tmp.network.network-data.network-request-input.network-input-parameters.`' />
                                    </set>
                                </block>
                            </outcome>
                        </switch>
                        <for index='idx' start='0' end='`$tmp.ep.parameters.param_length`'>
                            <block>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'access-node-id'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.access-node-id' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'access-ltp-id'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.access-ltp-id' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'clientSignal'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.clientSignal' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'cVLAN'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.cVLAN' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'access-provider-id'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.access-provider-id' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'access-client-id'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.access-client-id' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <switch test="`$tmp.ep.parameters.param[$idx].name == 'access-topology-id'`">
                                    <outcome value='true'>
                                        <set>
                                            <parameter name='prop.remote.connection-attachment.access-topology-id' value='`$tmp.ep.parameters.param[$idx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                                <return status='success'>
                                    <parameter name="ack-final-indicator" value="Y" />
                                    <parameter name="error-code" value="200" />
                                    <parameter name="error-message" value="`$error-message`" />
                                </return>
                            </block>
                        </for>
                        <block atomic="true">
                            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/' + $prop.restapi.oof-getpath.templatefile`" />
                                <parameter name="restapiUrl" value="`$prop.restapi.connection-oof-url`" />
                                <parameter name="restapiUser" value="`$prop.oof.user`" />
                                <parameter name="restapiPassword" value="`$prop.oof.password`" />
                                <parameter name="format" value="json"/>
                                <parameter name="httpMethod" value="post"/>
                                <parameter name="responsePrefix" value="oof"/>
                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                <parameter name="trustStorePassword" value="adminadmin"/>
                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                <parameter name="keyStorePassword" value="adminadmin"/>
                                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                                <outcome value='failure'>
                                    <return status='failure'>
                                        <parameter name='ack-final' value='Y'/>
                                        <parameter name="error-code" value="500" />
                                        <parameter name="error-message" value="Error executing OOF api" />
                                    </return>
                                </outcome>
                                <outcome value='success'>
                                    <block></block>
                                </outcome>
                            </execute>
                            <for index='vidx' start='0' end='`$oof.vpns_length`' >
                                <block atomic="true">
                                    <set>
                                        <parameter name='oof.vpn.' value='`$oof.vpns[$vidx].`' />
                                    </set>
                                    <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
		resource="pnf" 
		key="pnf.pnf-name = $oof.vpn.access-node-id 
		AND depth = '0'"
        pfx='tmp.aai.pnf' local-only='false' >
                                        <outcome value='success'>
                                            <set>
                                                <parameter name='tmp.thirdparty-sdnc-id' value="`$tmp.aai.pnf.relationship-list.relationship[0].relationship-data[0].relationship-value`" />
                                            </set>
                                        </outcome>
                                        <outcome value='not-found'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'An error occurred while querying pnf from AnAI with pnf-name = ' + $prop.connection-attachement.access-node-id`" />
                                            </return>
                                        </outcome>
                                        <outcome value='Other'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'Unexpected error occurred while querying pnf from AnAI with pnf-name = ' + $prop.connection-attachement.access-node-id`" />
                                            </return>
                                        </outcome>
                                    </get-resource>
                                    <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
		resource="esr-thirdparty-sdnc" 
		key="esr-thirdparty-sdnc.thirdparty-sdnc-id = $tmp.thirdparty-sdnc-id AND 
		     depth = '1'"
        pfx='tmp.aai.esr-thirdparty-sdnc' local-only='false' >
                                        <outcome value='success'>
                                            <set>
                                                <parameter name='prop.sdncRestApi.thirdpartySdnc.url' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].service-url`" />
                                                <parameter name='prop.sdncRestApi.thirdpartySdnc.user' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].user-name`" />
                                                <parameter name='prop.sdncRestApi.thirdpartySdnc.password' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].password`" />
                                            </set>
                                        </outcome>
                                        <outcome value='not-found'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'An error occurred while querying esr-thirdparty-sdnc from AnAI with thirdparty-sdnc-id = ' + $tmp.thirdparty-sdnc-id`" />
                                            </return>
                                        </outcome>
                                        <outcome value='Other'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'Unexpected error occurred while querying esr-thirdparty-sdnc from AnAI with thirdparty-sdnc-id = ' + $tmp.thirdparty-sdnc-id`" />
                                            </return>
                                        </outcome>
                                    </get-resource>
                                    <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                        <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/actokentemplate.json'`" />
                                        <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/v2/tokens'`" />
                                        <parameter name="format" value="json"/>
                                        <parameter name="httpMethod" value="post"/>
                                        <parameter name="responsePrefix" value="token-result"/>
                                        <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                        <parameter name="trustStorePassword" value="adminadmin"/>
                                        <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                        <parameter name="keyStorePassword" value="adminadmin"/>
                                        <outcome value='success'>
                                            <set>
                                                <parameter name='prop.sdncRestApi.token_id' value='`$token-result.data.token_id`' />
                                            </set>
                                        </outcome>
                                        <outcome value='failure'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="Error executing get token rest api" />
                                            </return>
                                        </outcome>
                                    </execute>
                                    <set>
                                        <parameter name='ietf-eth-tran-service_etht-svc.globals.etht-svc-bandwidth-profiles[0].bandwidth-profile-type' value='ietf-eth-tran-types:mef-10-bwp' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-type' value='ietf-eth-tran-types:p2p-svc' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].admin-status' value='ietf-te-types:tunnel-state-up' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[0].access-port-id' value='0' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[0].service-classification-type' value='ietf-eth-tran-types:port-classification' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[1].access-port-id' value='1' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[1].service-classification-type' value='ietf-eth-tran-types:port-classification' />
                                    </set>
                                    <set>
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].access-provider-id' value='`$oof.vpn.access-provider-id`' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].access-client-id' value='`$oof.vpn.access-client-id`' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].access-topology-id' value='`$oof.vpn.access-topology-id`' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[0].access-node-id' value='`$oof.vpn.access-node-id`' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[0].access-ltp-id' value='`$oof.vpn.src-access-ltp-id`' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[1].access-node-id' value='`$oof.vpn.access-node-id`' />
                                        <parameter name='ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-access-ports[1].access-ltp-id' value='`$oof.vpn.dst-access-ltp-id`' />
                                    </set>
                                    <switch test="`$prop.sdncRestApi.token_id`">
                                        <outcome value=''>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restconfapicall.RestconfApiCallNode' method='sendRequest' >
                                                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/restconf/data/ietf-eth-tran-service:etht-svc'`" />
                                                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                                                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                                                <parameter name="format" value="json"/>
                                                <parameter name="httpMethod" value="patch"/>
                                                <parameter name='dirPath' value="/opt/sdnc/restapi/yang" />
                                                <parameter name="responsePrefix" value="vpn-result"/>
                                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                                <parameter name="trustStorePassword" value="adminadmin"/>
                                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                                <parameter name="keyStorePassword" value="adminadmin"/>
                                                <outcome value='failure'>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="Error executing Create vpn rest api" />
                                                    </return>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block atomic="true"></block>
                                                </outcome>
                                            </execute>
                                        </outcome>
                                        <outcome value='Other'>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restconfapicall.RestconfApiCallNode' method='sendRequest' >
                                                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/restconf/data/ietf-eth-tran-service:etht-svc'`" />
                                                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                                                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                                                <parameter name="format" value="json"/>
                                                <parameter name="httpMethod" value="patch"/>
                                                <parameter name='dirPath' value="/opt/sdnc/restapi/yang" />
                                                <parameter name="responsePrefix" value="vpn-result"/>
                                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                                <parameter name="trustStorePassword" value="adminadmin"/>
                                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                                <parameter name="keyStorePassword" value="adminadmin"/>
                                                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                                                <outcome value='failure'>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="Error executing Create vpn rest api" />
                                                    </return>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block atomic="true"></block>
                                                </outcome>
                                            </execute>
                                        </outcome>
                                    </switch>
                                    <set>
                                        <parameter name='tmp.vpnName' value="`$oof.vpn.access-node-id + '-' + $ietf-eth-tran-service_etht-svc.etht-svc-instances[0].etht-svc-name`" />
                                    </set>
                                    <save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='vpn-binding' 
      key='vpn-binding.vpn-id = $tmp.vpnName' >
                                        <parameter name='vpn-id' value='`$tmp.vpnName`' />
                                        <parameter name='vpn-name' value='`$tmp.vpnName`' />
                                        <parameter name='access-provider-id' value='`$oof.vpn.access-provider-id`' />
                                        <parameter name='access-client-id' value='`$oof.vpn.access-client-id`' />
                                        <parameter name='access-topology-id' value='`$oof.vpn.access-topology-id`' />
                                        <parameter name='src-access-node-id' value='`$oof.vpn.access-node-id`' />
                                        <parameter name='src-access-ltp-id' value='`$oof.vpn.src-access-ltp-id`' />
                                        <parameter name='dst-access-node-id' value='`$oof.vpn.access-node-id`' />
                                        <parameter name='dst-access-ltp-id' value='`$oof.vpn.dst-access-ltp-id`' />
                                        <parameter name='vpn-type' value='`$prop.global.sotn.vpnType`' />
                                        <parameter name='operational-status' value='Created' />
                                        <parameter name='model-customization-id' value='`$network-topology-operation-input.network-information.onap-model-information.model-customization-uuid`' />
                                        <parameter name='model-invariant-id' value='`$network-topology-operation-input.network-information.onap-model-information.model-invariant-uuid`' />
                                        <parameter name='model-version-id' value='`$network-topology-operation-input.network-information.onap-model-information.model-uuid`' />
                                    </save>
                                    <save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='vpn-binding:relationship-list' 
      key='vpn-binding.vpn-id = $tmp.vpnName' 
      force="true" pfx="tmp.AnAI-data">
                                        <parameter name="relationship-list.relationship[0].related-to" value="connectivity" />
                                        <parameter name="relationship-list.relationship[0].related-link" value="`'/network/connectivities/connectivity/' + $mdsal-psd.service-data.networks.network[0].network-id`" />
                                        <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-key" value="connectivity.connectivity-id" />
                                        <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-value" value="`$mdsal-psd.service-data.networks.network[0].network-id`" />
                                    </save>
                                    <set>
                                        <parameter name='src-ltpId' value="`'nodeId-' + $oof.vpn.access-node-id + '-ltpId-' + $oof.vpn.src-access-ltp-id`" />
                                        <parameter name='dst-ltpId' value="`'nodeId-' + $oof.vpn.access-node-id + '-ltpId-' + $oof.vpn.dst-access-ltp-id`" />
                                    </set>
                                    <save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='vpn-binding:relationship-list' 
      key='vpn-binding.vpn-id = $tmp.vpnName' 
      force="true" pfx="tmp.AnAI-data">
                                        <parameter name="relationship-list.relationship[0].related-to" value="p-interface" />
                                        <parameter name="relationship-list.relationship[0].related-link" value="`'/network/pnfs/pnf/' + $oof.vpn.access-node-id + '/p-interfaces/p-interface/' + $src-ltpId`" />
                                        <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-key" value="p-interface.interface-name" />
                                        <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-value" value="`$src-ltpId`" />
                                    </save>
                                    <save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='vpn-binding:relationship-list' 
      key='vpn-binding.vpn-id = $tmp.vpnName' 
      force="true" pfx="tmp.AnAI-data">
                                        <parameter name="relationship-list.relationship[0].related-to" value="p-interface" />
                                        <parameter name="relationship-list.relationship[0].related-link" value="`'/network/pnfs/pnf/' + $oof.vpn.access-node-id + '/p-interfaces/p-interface/' + $dst-ltpId`" />
                                        <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-key" value="p-interface.interface-name" />
                                        <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-value" value="`$dst-ltpId`" />
                                    </save>
                                </block>
                            </for>
                        </block>
                    </block>
                </outcome>
            </switch>
            <set>
                <parameter name='connection-attachment-ar.allotted-resource-status.action' value="`$connection-attachment-topology-operation-input.request-information.request-action` " />
                <parameter name='connection-attachment-ar.allotted-resource-status.rpc-name' value="connection-attachment-topology-operation" />
                <parameter name='connection-attachment-ar.allotted-resource-status.rpc-action' value="`$connection-attachment-topology-operation-input.sdnc-request-header.svc-action` " />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-operation-information.request-information.' value="`$connection-attachment-topology-operation-input.request-information.` " />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-operation-information.sdnc-request-header.' value="`$connection-attachment-topology-operation-input.sdnc-request-header.` " />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-operation-information.service-information.' value="`$connection-attachment-topology-operation-input.service-information.` " />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-operation-information.allotted-resource-information.' value="`$connection-attachment-topology-operation-input.allotted-resource-information.` " />
            </set>
            <set>
                <parameter name='connection-attachment-ar.allotted-resource-data.connection-attachment-topology.onap-model-information.' value="`$connection-attachment-topology-operation-input.allotted-resource-information.onap-model-information.` " />
            </set>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='setTime' >
                <parameter name="outputPath" value="tmp.current-time" />
            </execute>
            <set>
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.order-status' value='Active' />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.last-action' value='`$connection-attachment-topology-operation-input.request-information.request-action`' />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.last-rpc-action' value='`$connection-attachment-topology-operation-input.sdnc-request-header.svc-action`' />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.last-svc-request-id' value='`$connection-attachment-topology-operation-input.sdnc-request-header.svc-request-id`' />
                <parameter name='connection-attachment-ar.allotted-resource-data.allotted-resource-oper-status.create-timestamp' value='`$tmp.current-time`' />
            </set>
            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                <parameter name='templateFileName' value="`$prop.restapi.templateDir + '/' + $prop.restapi.sotn-attachment.templatefile`" />
                <parameter name='restapiUrl' value='`$prop.controller.url + $tmp.ar-url`' />
                <parameter name='restapiUser' value='`$prop.controller.user`' />
                <parameter name='restapiPassword' value='`$prop.controller.pwd`' />
                <parameter name='format' value='json' />
                <parameter name='httpMethod' value='PUT' />
                <parameter name="responsePrefix" value="mdsal-ar" />
                <outcome value='success'>
                    <block></block>
                </outcome>
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error updating md-sal for connection-attachment-allotted-resource" />
                    </return>
                </outcome>
                <outcome value='not-found'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error updating md-sal for connection-attachment-allotted-resource" />
                    </return>
                </outcome>
            </execute>
            <set>
                <parameter name='allotted-resource-id' value='`$tmp.ar.allotted-resource-id`' />
                <parameter name='connection-attachment-object-path' value="`$tmp.ar.self-link`"/>
                <parameter name='service-object-path' value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $connection-attachment-topology-operation-input.service-information.service-instance-id
 + '/service-data/service-topology/'`"/>
            </set>
            <update plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
		resource="allotted-resource" 
		key="customer.global-customer-id = $connection-attachment-topology-operation-input.service-information.global-customer-id AND
			service-subscription.service-type = $connection-attachment-topology-operation-input.service-information.subscription-service-type AND
			service-instance.service-instance-id = $connection-attachment-topology-operation-input.service-information.service-instance-id AND
			allotted-resource.id = $tmp.ar.allotted-resource-id"
        pfx='pfx' local-only='false' force='false'>
                <parameter name="description" value="`$connection-attachment-topology-operation-input.allotted-resource-information.allotted-resource-type`" />
                <parameter name="selflink" value="`$tmp.ar.self-link`" />
                <parameter name="model-invariant-id" value="`$connection-attachment-topology-operation-input.allotted-resource-information.onap-model-information.model-invariant-uuid`" />
                <parameter name="model-version-id" value="`$connection-attachment-topology-operation-input.allotted-resource-information.onap-model-information.model-uuid`" />
                <parameter name="operational-status" value="Active" />
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="AAI failed" />
                    </return>
                </outcome>
                <outcome value='not-found'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="AAI failed" />
                    </return>
                </outcome>
            </update>
            <return status='success'>
                <parameter name="ack-final-indicator" value="Y" />
                <parameter name="error-code" value="200" />
                <parameter name="error-message" value="`$error-message`" />
            </return>
        </block>
    </method>
</service-logic>
