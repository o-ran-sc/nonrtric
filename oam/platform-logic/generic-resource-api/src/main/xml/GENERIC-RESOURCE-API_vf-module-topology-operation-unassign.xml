<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='vf-module-topology-operation-unassign' mode='sync'>
        <block atomic="true">
            <execute plugin='org.onap.ccsdk.sli.plugins.prop.PropertiesNode' method='readProperties' >
                <parameter name='fileName' value='%SDNC_CONFIG_DIR%/generic-resource-api-dg.properties' />
                <parameter name='contextPrefix' value='prop' />
            </execute>
            <switch test='`$vf-module-topology-operation-input.vf-module-request-input.cloud-owner`'>
                <outcome value=''>
                    <block></block>
                </outcome>
                <outcome value='Other'>
                    <set>
                        <parameter name='prop.cloud-region.cloud-owner' value='`$vf-module-topology-operation-input.vf-module-request-input.cloud-owner`' />
                    </set>
                </outcome>
            </switch>
            <switch test='`$vf-module-topology-operation-input.request-information.request-action`'>
                <outcome value='DeleteVfModuleInstance'>
                    <block></block>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="If svc-action is 'deactivate' then request-action must be 'DeleteVfModuleInstance'" />
                    </return>
                </outcome>
            </switch>
            <set>
                <parameter name='vnf-index' value='-1' />
            </set>
            <switch test='`$service-data.vnfs.vnf_length`'>
                <outcome value=''>
                    <return status='success'>
                        <parameter name="ack-final-indicator" value="Y" />
                        <parameter name="error-code" value="200" />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <for index='idx' start='0' end='`$service-data.vnfs.vnf_length`' >
                        <switch test='`$service-data.vnfs.vnf[$idx].vnf-id == $vf-module-topology-operation-input.vnf-information.vnf-id`'>
                            <outcome value='true'>
                                <block>
                                    <set>
                                        <parameter name='vnf-index' value='`$idx`' />
                                    </set>
                                    <break/>
                                </block>
                            </outcome>
                        </switch>
                    </for>
                </outcome>
            </switch>
            <switch test='`$vnf-index`'>
                <outcome value='-1'>
                    <return status='success'>
                        <parameter name="ack-final-indicator" value="Y" />
                        <parameter name="error-code" value="200" />
                    </return>
                </outcome>
            </switch>
            <set>
                <parameter name='vf-module-index' value='-1' />
            </set>
            <for silentFailure='true' index='idx' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' >
                <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id == $vf-module-topology-operation-input.vf-module-information.vf-module-id`'>
                    <outcome value='true'>
                        <block>
                            <set>
                                <parameter name='vf-module-index' value='`$idx`' />
                            </set>
                            <break/>
                        </block>
                    </outcome>
                </switch>
            </for>
            <switch test='`$vf-module-index`'>
                <outcome value='-1'>
                    <return status='success'>
                        <parameter name="ack-final-indicator" value="Y" />
                        <parameter name="error-code" value="200" />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <block atomic="true">
                        <call module='GENERIC-RESOURCE-API' rpc='self-serve-vf-module-forking-logic' mode='sync' ></call>
                        <switch test="`$ss.self-serve-flag`">
                            <outcome value='true'>
                                <call module='GENERIC-RESOURCE-API' rpc='self-serve-vf-module-unassign' mode='sync' >
                                    <outcome value='failure'>
                                        <return status='failure'>
                                            <parameter name='error-code' value='500' />
                                            <parameter name='error-message' value="`'Encountered error while unassigning self-serve vf-moldule esources with error: '+ $error-message`" />
                                        </return>
                                    </outcome>
                                    <outcome value='success'>
                                        <block>
                                            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                                                <outcome value='1'>
                                                    <set>
                                                        <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules." value=""/>
                                                    </set>
                                                </outcome>
                                                <outcome value='Other'>
                                                    <block atomic="true">
                                                        <for index='idx' start='`$vf-module-index + 1`' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' >
                                                            <block>
                                                                <set>
                                                                    <parameter name="tmpidx" value="`$idx - 1`"/>
                                                                </set>
                                                                <set>
                                                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmpidx].' value='' />
                                                                </set>
                                                                <set>
                                                                    <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmpidx]." value="$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx]." />
                                                                </set>
                                                            </block>
                                                        </for>
                                                        <!--EIPAM plug-in needs this attribute set with this name-->
                                                        <set>
                                                            <parameter name='lastidx' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length - 1`' />
                                                        </set>
                                                        <set>
                                                            <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$lastidx]." value=""/>
                                                        </set>
                                                        <set>
                                                            <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length" value="`$lastidx`"/>
                                                        </set>
                                                    </block>
                                                </outcome>
                                            </switch>
                                            <return status='success'>
                                                <parameter name="ack-final-indicator" value="Y" />
                                                <parameter name="error-code" value="200" />
                                                <parameter name="error-message" value="`$error-message`" />
                                            </return>
                                        </block>
                                    </outcome>
                                </call>
                            </outcome>
                            <outcome value='false'>
                                <block atomic="true">
                                    <set>
                                        <parameter name='tmp.status' value="`'PENDING_DELETE_' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-topology-identifier.vf-module-id`" />
                                    </set>
                                    <update plugin="org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource" resource="SQL"
key="UPDATE EIPAM_IP_ASSIGNMENTS set status = $tmp.status WHERE info = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-topology-identifier.vf-module-id" >
                                        <outcome value='failure'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="Error updating EIPAM_IP_ASSIGNMENTS table" />
                                            </return>
                                        </outcome>
                                    </update>
                                    <!--EIPAM plug-in needs this attribute set with this name-->
                                    <set>
                                        <parameter name='service-data.service-information.service-type' value='`$service-data.service-information.subscription-service-type`' />
                                    </set>
                                    <execute plugin="com.att.sdnctl.sli.plugin.eipam.EIPAMPlugin" method="unassignIPAddress">
                                        <parameter name="deleteEIPAM_status" value="`$tmp.status`" />
                                        <outcome value='failure'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="Error in EIPAM unassign IP address" />
                                            </return>
                                        </outcome>
                                    </execute>
                                    <for silentFailure='true' index='vm-type-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                        <for silentFailure='true' index='vm-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-count`' >
                                            <block atomic="true">
                                                <delete plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
  key='DELETE from VIPR_CONFIGURATION WHERE vnf_id = $service-data.vnfs.vnf[$vnf-index].vnf-id
     AND ecomp_service_instance_id = $service-data.service-information.service-instance-id
     AND vm_name = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vm-index]' >
                                                    <outcome value='failure'>
                                                        <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                            <parameter name="logger" value="message-log"/>
                                                            <parameter name="field1" value="__TIMESTAMP__"/>
                                                            <parameter name="field2" value="GENERIC-RESOURCE-API.vf-module-topology-operation-assign:REQID"/>
                                                            <parameter name="field3" value="`$vf-module-topology-operation-input.sdnc-request-header.svc-request-id`"/>
                                                            <parameter name="field4" value="Failed to insert VIPR_CONFIGURATION record"/>
                                                        </record>
                                                    </outcome>
                                                </delete>
                                            </block>
                                        </for>
                                    </for>
                                    <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vlan-vnfc-instance-groups.vlan-vnfc-instance-group[0].vnfcs.vnfc[0].vnic-groups.vnic-group[0].network-instance-group-function`'>
                                        <outcome value=''>
                                            <block></block>
                                        </outcome>
                                        <outcome value='Other'>
                                            <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
  resource="instance-groups" 
  key="instance-group.instance-group-function = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vlan-vnfc-instance-groups.vlan-vnfc-instance-group[0].vnfcs.vnfc[0].vnic-groups.vnic-group[0].network-instance-group-function
    AND instance-group.instance-group-type = 'L3-NETWORK'"
  pfx='aai.instance-group' local-only='false' >
                                                <outcome value='success'>
                                                    <for index='ig-index' start='0' end='`$aai.instance-group.instance-group_length`' >
                                                        <for index='rel-index' start='0' end='`$aai.instance-group.instance-group[$ig-index].relationship-list.relationship_length`' >
                                                            <for index='reldata-index' start='0' end='`$aai.instance-group.instance-group[$ig-index].relationship-list.relationship[$rel-index].relationship-data_length`' >
                                                                <switch test="`$aai.instance-group.instance-group[$ig-index].relationship-list.relationship[$rel-index].relationship-data[$reldata-index].relationship-key
  == 'service-instance.service-instance-id'`">
                                                                    <outcome value='true'>
                                                                        <switch test='`$aai.instance-group.instance-group[$ig-index].relationship-list.relationship[$rel-index].relationship-data[$reldata-index].relationship-value
  == $service-data.service-information.service-instance-id`'>
                                                                            <outcome value='true'>
                                                                                <block>
                                                                                    <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                                                                                        <outcome value='1'>
                                                                                            <block>
                                                                                                <set>
                                                                                                    <parameter name='tmp.status' value="`'PENDING_DELETE_' + $aai.instance-group.instance-group[$ig-index].id`" />
                                                                                                </set>
                                                                                                <update plugin="org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource" resource="SQL"
key="UPDATE EIPAM_IP_ASSIGNMENTS set status = $tmp.status WHERE info = $aai.instance-group.instance-group[$ig-index].id" ></update>
                                                                                                <execute plugin="com.att.sdnctl.sli.plugin.eipam.EIPAMPlugin" method="unassignIPAddress">
                                                                                                    <parameter name="deleteEIPAM_status" value="`$tmp.status`" />
                                                                                                </execute>
                                                                                            </block>
                                                                                        </outcome>
                                                                                    </switch>
                                                                                    <for index='nig-index' start='0' end='`$service-data.network-instance-groups.network-instance-group_length`' >
                                                                                        <switch test='`$aai.instance-group.instance-group[$ig-index].id
  == $service-data.network-instance-groups.network-instance-group[$nig-index].network-instance-group-id`'>
                                                                                            <outcome value='true'>
                                                                                                <for index='network-index' start='0' end='`$service-data.network-instance-groups.network-instance-group[$nig-index].networks.network_length`' >
                                                                                                    <set>
                                                                                                        <parameter name='service-data.network-instance-groups.network-instance-group[$nig-index].networks.network[$network-index].vlan-tag-id'
  value='' />
                                                                                                        <parameter name='service-data.network-instance-groups.network-instance-group[$nig-index].networks.network[$network-index].network-status'
  value='unassigned' />
                                                                                                    </set>
                                                                                                </for>
                                                                                            </outcome>
                                                                                        </switch>
                                                                                    </for>
                                                                                </block>
                                                                            </outcome>
                                                                        </switch>
                                                                    </outcome>
                                                                </switch>
                                                            </for>
                                                        </for>
                                                    </for>
                                                </outcome>
                                            </get-resource>
                                        </outcome>
                                    </switch>
                                    <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-topology-identifier.vf-module-name`'>
                                        <outcome value='Other'>
                                            <block></block>
                                        </outcome>
                                        <outcome value=''>
                                            <block atomic="true">
                                                <set>
                                                    <parameter name='generate-unique-name-input.name-table-type' value='VF_MODULE_INSTANCE' />
                                                    <parameter name='generate-unique-name-input.context-id' value='`$vf-module-topology-operation-input.vnf-information.vnf-id`' />
                                                    <parameter name='generate-unique-name-input.action' value='DELETE' />
                                                </set>
                                                <call module='GENERIC-RESOURCE-API' rpc='naming-policy-generate-unique-name' mode='sync' ></call>
                                            </block>
                                        </outcome>
                                    </switch>
                                    <for silentFailure='true' index='vm-type-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                        <block>
                                            <for silentFailure='true' index='vm-name-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name_length`' >
                                                <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vm-name-index]`'>
                                                    <outcome value=''>
                                                        <block></block>
                                                    </outcome>
                                                    <outcome value='Other'>
                                                        <block>
                                                            <set>
                                                                <parameter name='naming-policy-generate-name-input.naming-type' value='VM' />
                                                                <parameter name='naming-policy-generate-name-input.context-id' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-topology-identifier.vf-module-id`' />
                                                                <parameter name='naming-policy-generate-name-input.action' value='DELETE' />
                                                            </set>
                                                            <call module='GENERIC-RESOURCE-API' rpc='naming-policy-generate-name' mode='sync' ></call>
                                                        </block>
                                                    </outcome>
                                                </switch>
                                            </for>
                                            <for silentFailure='true' index='vnfc-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                <block>
                                                    <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`'>
                                                        <outcome value=''>
                                                            <block></block>
                                                        </outcome>
                                                        <outcome value='Other'>
                                                            <block>
                                                                <set>
                                                                    <parameter name='naming-policy-generate-name-input.naming-type' value='VNFC' />
                                                                    <parameter name='naming-policy-generate-name-input.context-id' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-topology-identifier.vf-module-id`' />
                                                                    <parameter name='naming-policy-generate-name-input.vm-name' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vnfc-index]`' />
                                                                    <parameter name='naming-policy-generate-name-input.action' value='DELETE' />
                                                                </set>
                                                                <call module='GENERIC-RESOURCE-API' rpc='naming-policy-generate-name' mode='sync' ></call>
                                                            </block>
                                                        </outcome>
                                                    </switch>
                                                    <delete plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vnfc"
   key="vnfc.vnfc-name = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name"></delete>
                                                </block>
                                            </for>
                                            <for silentFailure='true' index='network-role-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network_length`' >
                                                <block>
                                                    <for silentFailure='true' index='vnfc-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                        <block>
                                                            <for silentFailure='true' index='ipv4-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4_length`' >
                                                                <delete plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
   resource="vip-ipv4-address-list" 
   key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv4-address-list.vip-ipv4-address = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]" ></delete>
                                                            </for>
                                                            <for silentFailure='true' index='ipv6-index' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6_length`' >
                                                                <delete plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
   resource="vip-ipv6-address-list" 
   key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv6-address-list.vip-ipv6-address = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]" ></delete>
                                                            </for>
                                                        </block>
                                                    </for>
                                                </block>
                                            </for>
                                        </block>
                                    </for>
                                    <block>
                                        <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                                            <outcome value='1'>
                                                <set>
                                                    <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules." value=""/>
                                                </set>
                                            </outcome>
                                            <outcome value='Other'>
                                                <block atomic="true">
                                                    <for index='idx' start='`$vf-module-index + 1`' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' >
                                                        <block>
                                                            <set>
                                                                <parameter name="tmpidx" value="`$idx - 1`"/>
                                                            </set>
                                                            <set>
                                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmpidx].' value='' />
                                                            </set>
                                                            <set>
                                                                <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmpidx]." value="$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx]." />
                                                            </set>
                                                        </block>
                                                    </for>
                                                    <!--EIPAM plug-in needs this attribute set with this name-->
                                                    <set>
                                                        <parameter name='lastidx' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length - 1`' />
                                                    </set>
                                                    <set>
                                                        <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$lastidx]." value=""/>
                                                    </set>
                                                    <set>
                                                        <parameter name="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length" value="`$lastidx`"/>
                                                    </set>
                                                </block>
                                            </outcome>
                                        </switch>
                                        <return status='success'>
                                            <parameter name="ack-final-indicator" value="Y" />
                                            <parameter name="error-code" value="200" />
                                            <parameter name="error-message" value="`$error-message`" />
                                        </return>
                                    </block>
                                </block>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
            </switch>
        </block>
    </method>
</service-logic>