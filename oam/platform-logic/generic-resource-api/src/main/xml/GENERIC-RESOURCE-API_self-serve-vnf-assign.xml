<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='self-serve-vnf-assign' mode='sync'>
        <block atomic='true'>
            <set>
                <parameter name='is-new-vnf' value='true' />
            </set>
            <switch test='`$service-data.vnfs.vnf_length`'>
                <outcome value=''>
                    <block>
                        <set>
                            <parameter name='vnf-index' value='0' />
                        </set>
                        <set>
                            <parameter name='service-data.vnfs.vnf_length' value='1' />
                        </set>
                    </block>
                </outcome>
                <outcome value='0'>
                    <block>
                        <set>
                            <parameter name='vnf-index' value='0' />
                        </set>
                        <set>
                            <parameter name='service-data.vnfs.vnf_length' value='1' />
                        </set>
                    </block>
                </outcome>
                <outcome value='Other'>
                    <block>
                        <for index='idx' start='0' end='`$service-data.vnfs.vnf_length`' >
                            <switch test='`$vnf-topology-operation-input.vnf-information.vnf-id == $service-data.vnfs.vnf[$idx].vnf-id`'>
                                <outcome value='true'>
                                    <block>
                                        <set>
                                            <parameter name='is-new-vnf' value='false' />
                                        </set>
                                        <set>
                                            <parameter name='vnf-index' value='`$idx`' />
                                        </set>
                                        <break/>
                                    </block>
                                </outcome>
                            </switch>
                        </for>
                        <switch test='`$is-new-vnf`'>
                            <outcome value='true'>
                                <block>
                                    <set>
                                        <parameter name='vnf-index' value='`$service-data.vnfs.vnf_length`' />
                                    </set>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf_length' value='`$service-data.vnfs.vnf_length + 1`' />
                                    </set>
                                </block>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
            </switch>
            <switch test='`$is-new-vnf`'>
                <outcome value='true'>
                    <block>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.vnf-id'
 value='`$vnf-topology-operation-input.vnf-information.vnf-id`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.vnf-type'
 value='`$vnf-topology-operation-input.vnf-information.vnf-type`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.nf-type'
 value='`$db.vf-model.nf-type`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.nf-role'
 value='`$db.vf-model.nf-role`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.nf-function'
 value='`$db.vf-model.nf-function`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.nf-code'
 value='`$db.vf-model.nf-code`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.tenant'
 value='`$vnf-topology-operation-input.vnf-request-input.tenant`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.aic-cloud-region'
 value='`$vnf-topology-operation-input.vnf-request-input.aic-cloud-region`' />
                        </set>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-id'
   value='`$vnf-topology-operation-input.vnf-information.vnf-id`' />
                        </set>
                        <switch test='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-invariant-uuid`'>
                            <outcome value=''>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-invariant-uuid'
  value='`$db.vf-model.invariant-uuid`' />
                                </set>
                            </outcome>
                            <outcome value='Other'>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-invariant-uuid'
  value='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-invariant-uuid`' />
                                </set>
                            </outcome>
                        </switch>
                        <switch test='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-uuid`'>
                            <outcome value=''>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-uuid'
  value='`$db.vf-model.uuid`' />
                                </set>
                            </outcome>
                            <outcome value='Other'>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-uuid'
  value='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-uuid`' />
                                </set>
                            </outcome>
                        </switch>
                        <switch test='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-version`'>
                            <outcome value=''>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-version'
  value='`$db.vf-model.version`' />
                                </set>
                            </outcome>
                            <outcome value='Other'>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-version'
  value='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-version`' />
                                </set>
                            </outcome>
                        </switch>
                        <switch test='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-name`'>
                            <outcome value=''>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-name'
  value='`$db.vf-model.name`' />
                                </set>
                            </outcome>
                            <outcome value='Other'>
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-name'
  value='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-name`' />
                                </set>
                            </outcome>
                        </switch>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.onap-model-information.model-customization-uuid'
  value='`$vnf-topology-operation-input.vnf-information.onap-model-information.model-customization-uuid`' />
                        </set>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.sdnc-request-header.' 
	value='$vnf-topology-operation-input.sdnc-request-header.' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.request-information.' 
	value='$vnf-topology-operation-input.request-information.' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.service-information.' 
	value='$vnf-topology-operation-input.service-information.' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-information.' 
	value='$vnf-topology-operation-input.vnf-information.' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-request-input.' 
	value='$vnf-topology-operation-input.vnf-request-input.' />
                        </set>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-level-oper-status.order-status' value='PendingCreate' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-level-oper-status.last-rpc-action' value='`$vnf-topology-operation-input.sdnc-request-header.svc-action`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-level-oper-status.last-action' value='`$vnf-topology-operation-input.request-information.request-action`' />
                        </set>
                    </block>
                </outcome>
            </switch>
            <set>
                <parameter name='ss.capability.execution-order[0]' value='generate-name' />
                <parameter name='ss.capability.execution-order[1]' value='alts-entitlement-assign' />
                <parameter name='ss.capability.execution-order[2]' value='alts-license-assign' />
                <parameter name='ss.capability.execution-order[3]' value='vlan-tag-assign' />
                <parameter name='ss.capability.execution-order[4]' value='mS-vlan-tag-assign' />
                <parameter name='ss.capability.execution-order[5]' value='eipam-ip-assignment' />
                <parameter name='ss.capability.execution-order[6]' value='eipam-create-pool' />
                <parameter name='ss.capability.execution-order[7]' value='netbox-ip-assign' />
                <parameter name='ss.capability.execution-order[8]' value='mac-address-assign' />
                <parameter name='ss.capability.execution-order[9]' value='mS-mac-address-assign' />
                <parameter name='ss.capability.execution-order[10]' value='create-vpe-pool' />
                <parameter name='ss.capability.execution-order[11]' value='unresolved-composite-data' />
                <parameter name='ss.capability.execution-order[12]' value='aai-vnf-put' />
                <parameter name='ss.capability.execution-order_length' value='13' />
            </set>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.sdnc-generated-cloud-resources' value='true' />
            </set>
            <set>
                <parameter name='ss.capability-type' value='vnf' />
            </set>
            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-parameters-data.param_length`'>
                <outcome value=''>
                    <block atomic='true'>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-parameters-data.'
  value='vnf-topology-operation-input.vnf-request-input.vnf-input-parameters.' />
                        </set>
                        <call module='GENERIC-RESOURCE-API' rpc='self-serve-vnf-ra-assignment' mode='sync' >
                            <outcome value='failure'>
                                <return status='failure'>
                                    <parameter name='error-code' value='500' />
                                    <parameter name='error-message' value="`'Failed to get RA assignments: ' + $error-message`" />
                                </return>
                            </outcome>
                        </call>
                    </block>
                </outcome>
            </switch>
            <for index='cidx' start='0' end='`$ss.capability.execution-order_length`' >
                <set>
                    <parameter name='ss.capability-name' value='`$ss.capability.execution-order[$cidx]`' />
                    <!--
ss.capability.execution-order[]
-->
                </set>
                <set>
                    <parameter name='ss.capability-action' value='assign' />
                </set>
                <set>
                    <parameter name='ss.capability-dg' value="`'self-serve-' + $ss.capability.execution-order[$cidx]`" />
                </set>
                <for index='pidx' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-parameters-data.param_length`' >
                    <set>
                        <parameter name='tmp.param.capability-name' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-parameters-data.param[$pidx].resource-resolution-data.capability-name`' />
                    </set>
                    <switch test='`$ss.capability-name == $tmp.param.capability-name`'>
                        <outcome value='true'>
                            <block atomic='true'>
                                <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-parameters-data.param[$pidx].resource-resolution-data.status`'>
                                    <outcome value='PENDING'>
                                        <call module='GENERIC-RESOURCE-API' rpc='`$ss.capability-dg`' mode='sync' >
                                            <outcome value='failure'>
                                                <block atomic='true'>
                                                    <set>
                                                        <parameter name='error-message' value="`'Encountered error from ' + $ss.capability-dg + ' with error: ' + $error-message`" />
                                                    </set>
                                                    <call module='GENERIC-RESOURCE-API' rpc='self-serve-vnf-mdsal-put' mode='sync' ></call>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name='error-code' value='500' />
                                                        <parameter name='error-message' value="`$error-message`" />
                                                    </return>
                                                </block>
                                            </outcome>
                                            <outcome value='success'>
                                                <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                    <parameter name="logger" value="message-log"/>
                                                    <parameter name="field1" value="`'EXECUTION DONE: ' + $ss.capability-dg`"/>
                                                </record>
                                            </outcome>
                                        </call>
                                    </outcome>
                                    <outcome value='FAILED'>
                                        <call module='GENERIC-RESOURCE-API' rpc='`$ss.capability-dg`' mode='sync' >
                                            <outcome value='failure'>
                                                <block atomic='true'>
                                                    <set>
                                                        <parameter name='error-message' value="`'Encountered error from ' + $ss.capability-dg + ' with error: ' + $error-message`" />
                                                    </set>
                                                    <call module='GENERIC-RESOURCE-API' rpc='self-serve-vnf-mdsal-put' mode='sync' ></call>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name='error-code' value='500' />
                                                        <parameter name='error-message' value="`$error-message`" />
                                                    </return>
                                                </block>
                                            </outcome>
                                            <outcome value='success'>
                                                <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                    <parameter name="logger" value="message-log"/>
                                                    <parameter name="field1" value="`'EXECUTION DONE: ' + $ss.capability-dg`"/>
                                                </record>
                                            </outcome>
                                        </call>
                                    </outcome>
                                </switch>
                                <break/>
                            </block>
                        </outcome>
                    </switch>
                </for>
            </for>
            <call module='GENERIC-RESOURCE-API' rpc='self-serve-vnf-mdsal-put' mode='sync' ></call>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                <parameter name='filename' value='/var/tmp/ss-vnf-assign.log' />
            </execute>
        </block>
    </method>
</service-logic>