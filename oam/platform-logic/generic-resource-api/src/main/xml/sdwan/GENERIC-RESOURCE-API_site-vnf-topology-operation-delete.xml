<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='site-vnf-topology-operation-delete' mode='sync'>
        <block atomic="true">
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='requiredParameters' >
                <parameter name="vnf-topology-operation-input.vnf-information.vnf-id" value="$vnf-topology-operation-input.vnf-information.vnf-id"/>
            </execute>
            <switch test="`$vnf-topology-operation-input.vnf-information.vnf-id`">
                <outcome value=''>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="vnf-request-input.vnf-input-parameters.name is a required input" />
                    </return>
                </outcome>
            </switch>
            <switch test='`$service-data.vnfs.vnf_length`'>
                <outcome value=''>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="vnf-topology-operation-input.vnf-request-input.vnf-id not found in service-data" />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <block atomic="true">
                        <for index='nidx' start='0' end='`$service-data.vnfs.vnf_length`' >
                            <switch test="`$service-data.vnfs.vnf[$nidx].vnf-id == $vnf-topology-operation-input.vnf-information.vnf-id`">
                                <outcome value='true'>
                                    <set>
                                        <parameter name='tmp.nidx' value='`$nidx`' />
                                        <parameter name='ctx.vnf-data.' value='`$service-data.vnfs.vnf[$nidx].vnf-data.`' />
                                    </set>
                                </outcome>
                            </switch>
                        </for>
                        <switch test="`$tmp.nidx`">
                            <outcome value=''>
                                <return status='failure'>
                                    <parameter name='ack-final' value='Y'/>
                                    <parameter name="error-code" value="500" />
                                    <parameter name="error-message" value="vnf-topology-operation-input.vnf-request-input.vnf-id not found in service-data" />
                                </return>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
            </switch>
            <switch test='`$service-data.vnfs.vnf[$tmp.nidx].vnf-data.vnf-level-oper-status.order-status`'>
                <outcome value='PendingDelete'>
                    <block atomic="true"></block>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="`'VNF is not in appropriate state for activate. Current state is ' + $service-data.vnfs.vnf[$tmp.nidx].vnf-data.vnf-level-oper-status.order-status`" />
                    </return>
                </outcome>
            </switch>
            <set>
                <parameter name='prop.vnfidxLen' value='`0`' />
            </set>
            <for index='lidx' start='0' end='`$service-data.vnfs.vnf_length`' >
                <block atomic="true">
                    <switch test="`$service-data.vnfs.vnf[$lidx].vnf-id == $vnf-topology-operation-input.vnf-information.vnf-id`">
                        <outcome value='false'>
                            <block atomic="true">
                                <set>
                                    <parameter name='service-data.vnfs.vnf[$prop.vnfidxLen].vnf-id' value='`$service-data.vnfs.vnf[$lidx].vnf-id`' />
                                    <parameter name='service-data.vnfs.vnf[$prop.vnfidxLen].vnf-data.' value='`$service-data.vnfs.vnf[$lidx].vnf-data.`' />
                                </set>
                                <set>
                                    <parameter name='prop.vnfidxLen' value='`$prop.vnfidxLen + 1`' />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                </block>
            </for>
            <set>
                <parameter name="service-data.vnfs.vnf_length" value='`$prop.vnfidxLen`'/>
            </set>
            <set>
                <parameter name="service-data.vnfs.vnf[$prop.vnfidxLen]." value=""/>
            </set>
            <set>
                <parameter name='vnfId' value='`$vnf-topology-operation-input.vnf-information.vnf-id`' />
                <parameter name='vnf-object-path' value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vnf-topology-operation-input.service-information.service-instance-id
 + '/service-data/service-topology/'` " />
            </set>
            <delete plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" resource='site-resource' 
        key='site-resource.site-resource-id = $vnf-topology-operation-input.vnf-information.vnf-id'></delete>
            <return status='success'>
                <parameter name="ack-final-indicator" value="Y" />
                <parameter name="error-code" value="200" />
                <parameter name="error-message" value="`$error-message`" />
            </return>
        </block>
    </method>
</service-logic>