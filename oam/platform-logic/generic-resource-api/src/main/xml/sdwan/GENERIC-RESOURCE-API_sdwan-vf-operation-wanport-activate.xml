<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='sdwan-vf-operation-wanport-activate' mode='sync'>
        <block atomic="true">
            <switch test='`$service-data.vnfs.vnf_length`'>
                <outcome value=''>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="404" />
                        <parameter name="error-message" value="There are no VNFs in MD-SAL" />
                    </return>
                </outcome>
            </switch>
            <for index='idx' start='0' end='`$service-data.vnfs.vnf_length`' >
                <switch test="`$service-data.vnfs.vnf[$idx].vnf-id == $vf-module-topology-operation-input.vnf-information.vnf-id`">
                    <outcome value='true'>
                        <set>
                            <parameter name='vnf-index' value='`$idx`' />
                        </set>
                    </outcome>
                </switch>
            </for>
            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                <outcome value='0'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="vf-module-operation-input.vf-module-request-input.vf-id not found in service-data" />
                    </return>
                </outcome>
                <outcome value=''>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="vf-module-operation-input.vf-module-request-input.vf-id not found in service-data" />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <block>
                        <set>
                            <parameter name='prop.site.deviceId_length' value='0' />
                        </set>
                        <set>
                            <parameter name='vf-module-length' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' />
                        </set>
                        <for index='idx' start='0' end='`$vf-module-length`' >
                            <block atomic="true">
                                <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id == $vf-module-topology-operation-input.vf-module-information.vf-module-id`">
                                    <outcome value='true'>
                                        <block atomic="true">
                                            <set>
                                                <parameter name='tmp.vidx' value='`$idx`' />
                                                <parameter name='ctx.vf-module-data.' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.`' />
                                            </set>
                                            <set>
                                                <parameter name='vf-module-request-input.' value='`$ctx.vf-module-data.vf-module-request-input.`' />
                                            </set>
                                            <call module='GENERIC-RESOURCE-API' rpc='sdwan-get-wan-param' mode='sync' ></call>
                                        </block>
                                    </outcome>
                                </switch>
                            </block>
                        </for>
                        <for index='idx' start='0' end='`$vf-module-length`' >
                            <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.request-information.request-action == 'ActivateSDWANDeviceInstance'`">
                                <outcome value='true'>
                                    <block atomic="true">
                                        <for index="didx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length`">
                                            <block>
                                                <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].name == 'deviceId'`">
                                                    <outcome value='true'>
                                                        <set>
                                                            <parameter name='prop.site.deviceId[$prop.site.deviceId_length]' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].value`' />
                                                            <parameter name='prop.site.deviceId_length' value='`$prop.site.deviceId_length + 1`' />
                                                        </set>
                                                    </outcome>
                                                </switch>
                                            </block>
                                            <block atomic="true">
                                                <record plugin="org.onap.ccsdk.sli.core.sli.recording.FileRecorder">
                                                    <parameter name="file" value="/opt/opendaylight/current/data/log/svclogic-device-param.log"/>
                                                    <parameter name="field1" value="__TIMESTAMP__"/>
                                                    <parameter name="field2" value="'service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].name'"/>
                                                    <parameter name="field3" value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].name`'/>
                                                </record>
                                                <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].name == 'name'`">
                                                    <outcome value='true'>
                                                        <block atomic="true">
                                                            <record plugin="org.onap.ccsdk.sli.core.sli.recording.FileRecorder">
                                                                <parameter name="file" value="/opt/opendaylight/current/data/log/svclogic-device-name.log"/>
                                                                <parameter name="field1" value="__TIMESTAMP__"/>
                                                                <parameter name="field2" value="'prop.wan.deviceName'"/>
                                                                <parameter name="field3" value='`$prop.wan.deviceName`'/>
                                                                <parameter name="field4" value="'service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].value'"/>
                                                                <parameter name="field5" value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].value`'/>
                                                            </record>
                                                            <switch test="`$prop.wan.deviceName == $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$didx].value`">
                                                                <outcome value='true'>
                                                                    <block atomic="true">
                                                                        <for index="deviceidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length`">
                                                                            <block atomic="true">
                                                                                <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$deviceidx].name == 'deviceId'`">
                                                                                    <outcome value='true'>
                                                                                        <set>
                                                                                            <parameter name='prop.wan.deviceId' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$deviceidx].value`' />
                                                                                        </set>
                                                                                    </outcome>
                                                                                </switch>
                                                                            </block>
                                                                        </for>
                                                                        <set>
                                                                            <parameter name='tmp.devicevidx' value='`$idx`' />
                                                                        </set>
                                                                        <record plugin="org.onap.ccsdk.sli.core.sli.recording.FileRecorder">
                                                                            <parameter name="file" value="/opt/opendaylight/current/data/log/svclogic-last.log"/>
                                                                            <parameter name="field1" value="__TIMESTAMP__"/>
                                                                            <parameter name="field2" value="'tmp.devicevidx'"/>
                                                                            <parameter name="field3" value='`$tmp.devicevidx`'/>
                                                                        </record>
                                                                    </block>
                                                                </outcome>
                                                            </switch>
                                                        </block>
                                                    </outcome>
                                                </switch>
                                            </block>
                                        </for>
                                    </block>
                                </outcome>
                            </switch>
                            <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.request-information.request-action == 'ActivateSDWANSiteInstance'`">
                                <outcome value='true'>
                                    <set>
                                        <parameter name='tmp.siteVidx' value='`$idx`' />
                                        <parameter name='ctx.site.' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].`' />
                                    </set>
                                </outcome>
                            </switch>
                        </for>
                    </block>
                </outcome>
            </switch>
            <execute plugin='org.onap.ccsdk.sli.plugins.prop.PropertiesNode' method='readProperties' >
                <parameter name='fileName' value='%SDNC_CONFIG_DIR%/generic-resource-api-dg.properties' />
                <parameter name='contextPrefix' value='prop' />
            </execute>
            <for index="sidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.siteVidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length`">
                <block atomic="true">
                    <switch test="`$ctx.site.vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$sidx].name == 'siteId'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.wan.siteId' value='`$ctx.site.vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$sidx].value`' />
                            </set>
                        </outcome>
                    </switch>
                </block>
            </for>
            <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
		resource="esr-thirdparty-sdnc" 
		key="esr-thirdparty-sdnc.thirdparty-sdnc-id = SDWANController AND 
		     depth = '1'"
        pfx='tmp.aai.esr-thirdparty-sdnc' local-only='false' >
                <outcome value='success'>
                    <set>
                        <parameter name='prop.sdncRestApi.thirdpartySdnc.url' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].service-url`" />
                        <parameter name='prop.sdncRestApi.thirdpartySdnc.user' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].user-name`" />
                        <parameter name='prop.sdncRestApi.thirdpartySdnc.password' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list.esr-system-info[0].password`" />
                    </set>
                </outcome>
                <outcome value='not-found'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="`'An error occurred while querying esr-thirdparty-sdnc from AnAI with thirdparty-sdnc-id = ' + $tmp.thirdparty-sdnc-id`" />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="`'Unexpected error occurred while querying esr-thirdparty-sdnc from AnAI with thirdparty-sdnc-id = ' + $tmp.thirdparty-sdnc-id`" />
                    </return>
                </outcome>
            </get-resource>
            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/actokentemplate.json'`" />
                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/v2/tokens'`" />
                <parameter name="format" value="json"/>
                <parameter name="httpMethod" value="post"/>
                <parameter name="responsePrefix" value="token-result"/>
                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                <parameter name="trustStorePassword" value="adminadmin"/>
                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                <parameter name="keyStorePassword" value="adminadmin"/>
                <outcome value='success'>
                    <set>
                        <parameter name='prop.sdncRestApi.token_id' value='`$token-result.data.token_id`' />
                    </set>
                </outcome>
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error executing get token rest api" />
                    </return>
                </outcome>
            </execute>
            <call module='GENERIC-RESOURCE-API' rpc='sdwan-get-tenant-auth' mode='sync' ></call>
            <for index='idx' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length`'>
                <block>
                    <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$idx].name == 'portType'`">
                        <outcome value='true'>
                            <block atomic="true">
                                <switch test="`GE == $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$idx].value`">
                                    <outcome value='true'>
                                        <block atomic="true">
                                            <set>
                                                <parameter name='prop.wan.linkType' value="Ethernet" />
                                            </set>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                                <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/sdwan-port-ethernet.json'`" />
                                                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/campus/v1/sdwan/net/ports'`" />
                                                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                                                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                                                <parameter name="format" value="json"/>
                                                <parameter name="httpMethod" value="post"/>
                                                <parameter name="responsePrefix" value="portResp"/>
                                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                                <parameter name="trustStorePassword" value="adminadmin"/>
                                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                                <parameter name="keyStorePassword" value="adminadmin"/>
                                                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                                                <outcome value='failure'>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="Error executing Create device port rest api" />
                                                    </return>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block atomic="true"></block>
                                                </outcome>
                                            </execute>
                                        </block>
                                    </outcome>
                                </switch>
                                <switch test="`LTE == $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$idx].value`">
                                    <outcome value='true'>
                                        <block atomic="true">
                                            <set>
                                                <parameter name='prop.wan.linkType' value="Cellular" />
                                            </set>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                                <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/sdwan-port-cellular.json'`" />
                                                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/campus/v1/sdwan/net/ports'`" />
                                                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                                                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                                                <parameter name="format" value="json"/>
                                                <parameter name="httpMethod" value="post"/>
                                                <parameter name="responsePrefix" value="portResp"/>
                                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                                <parameter name="trustStorePassword" value="adminadmin"/>
                                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                                <parameter name="keyStorePassword" value="adminadmin"/>
                                                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                                                <outcome value='failure'>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="Error executing Create device port rest api" />
                                                    </return>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block atomic="true"></block>
                                                </outcome>
                                            </execute>
                                        </block>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                </block>
            </for>
            <set>
                <parameter name='prop.wan.devicePortId' value='`$portResp.success[0].id`' />
            </set>
            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/campus/v1/sdwan/net/network-orchestration-resources'`" />
                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                <parameter name="format" value="json"/>
                <parameter name="httpMethod" value="get"/>
                <parameter name="responsePrefix" value="transportNetworksResp"/>
                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                <parameter name="trustStorePassword" value="adminadmin"/>
                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                <parameter name="keyStorePassword" value="adminadmin"/>
                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error executing Get transport network info rest api" />
                    </return>
                </outcome>
                <outcome value='success'>
                    <block atomic="true"></block>
                </outcome>
            </execute>
            <for index="tidx" start="0" end="`$transportNetworksResp.data.transportNetworks_length`">
                <block>
                    <switch test="`$transportNetworksResp.data.transportNetworks[$tidx].name == $prop.wan.transportNetworkName`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.wan.transportNetworkId' value='`$transportNetworksResp.data.transportNetworks[$tidx].id`' />
                            </set>
                        </outcome>
                    </switch>
                </block>
            </for>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='split' >
                <parameter name="original_string" value='`$prop.wan.ipAddress`'/>
                <parameter name="regex" value="/"/>
                <parameter name="ctx_memory_result_key" value="ipandMask"/>
                <outcome value='success'>
                    <set>
                        <parameter name='prop.wan.ip-address' value='`$ipandMask[0]`' />
                        <parameter name='prop.wan.prefixLength' value='`$ipandMask[1]`' />
                    </set>
                </outcome>
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='error-code' value='' />
                        <parameter name='error-message' value="An error occured while splitting sna1_route" />
                    </return>
                </outcome>
            </execute>
            <for index='idx' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length`'>
                <block>
                    <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$idx].name == 'IPMode'`">
                        <outcome value='true'>
                            <block atomic="true">
                                <switch test="`Static == $prop.wan.IPMode`">
                                    <outcome value='true'>
                                        <block atomic="true">
                                            <set>
                                                <parameter name='prop.wan.IpMode' value="static" />
                                                <parameter name='prop.wan.ipAddress' value='`$prop.wan.ip-address`' />
                                                <parameter name='prop.route.nextHopType' value="ip-address" />
                                            </set>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                                <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/sdwan-wan-port-static.json'`" />
                                                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/campus/v1/sdwan/net/transport-network-ports'`" />
                                                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                                                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                                                <parameter name="format" value="json"/>
                                                <parameter name="httpMethod" value="post"/>
                                                <parameter name="responsePrefix" value="wanPortResp"/>
                                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                                <parameter name="trustStorePassword" value="adminadmin"/>
                                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                                <parameter name="keyStorePassword" value="adminadmin"/>
                                                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                                                <outcome value='failure'>
                                                    <block atomic="true"></block>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block atomic="true">
                                                        <set>
                                                            <parameter name='prop.wan.wanPortId' value='`$wanPortResp.success[0].id`' />
                                                        </set>
                                                    </block>
                                                </outcome>
                                            </execute>
                                        </block>
                                    </outcome>
                                </switch>
                                <switch test="`DHCP == $prop.wan.IPMode`">
                                    <outcome value='true'>
                                        <block atomic="true">
                                            <set>
                                                <parameter name='prop.wan.ipAddress' value="" />
                                                <parameter name='prop.wan.prefixLength' value="" />
                                                <parameter name='prop.wan.providerIpAddress' value="" />
                                                <parameter name='prop.wan.IpMode' value="DHCP" />
                                                <parameter name='prop.route.nextHopType' value="outbound-interface" />
                                            </set>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                                <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/sdwan-wan-port-dhcp.json'`" />
                                                <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/controller/campus/v1/sdwan/net/transport-network-ports'`" />
                                                <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                                                <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                                                <parameter name="format" value="json"/>
                                                <parameter name="httpMethod" value="post"/>
                                                <parameter name="responsePrefix" value="wanPortResp"/>
                                                <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                                                <parameter name="trustStorePassword" value="adminadmin"/>
                                                <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                                                <parameter name="keyStorePassword" value="adminadmin"/>
                                                <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                                                <outcome value='failure'>
                                                    <block atomic="true"></block>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block atomic="true">
                                                        <set>
                                                            <parameter name='prop.wan.wanPortId' value='`$wanPortResp.success[0].id`' />
                                                        </set>
                                                    </block>
                                                </outcome>
                                            </execute>
                                        </block>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                </block>
            </for>
            <set>
                <parameter name='$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length].name' value='devicePortId' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length].value' value='`$prop.wan.devicePortId`' />
            </set>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length + 1`' />
            </set>
            <set>
                <parameter name='$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length].name' value='wanPortId' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param[$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length].value' value='`$prop.wan.wanPortId`' />
            </set>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-request-input.vf-module-input-parameters.param_length + 1`' />
            </set>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.sdnc-request-header.' value='`$vf-module-topology-operation-input.sdnc-request-header.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.request-information.' value='`$vf-module-topology-operation-input.request-information.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.service-information.' value='`$vf-module-topology-operation-input.service-information.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-information.' value='`$vf-module-topology-operation-input.vf-module-information.`' />
            </set>
            <set>
                <parameter name='vf-module-object-path' value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vf-module-topology-operation-input.service-information.service-instance-id
 + '/service-data/vnfs/vnf/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-id
 + '/vnf-data/vf-modules/vf-module/'
 + $vf-module-topology-operation-input.vf-module-information.vf-module-id
 + '/vf-module-data/vf-module-topology/'`"/>
                <parameter name='vnf-object-path'
 value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vf-module-topology-operation-input.service-information.service-instance-id
 + '/service-data/vnfs/vnf/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-id
 + '/vnf-data/vnf-topology/'`"/>
                <parameter name='service-object-path'
 value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vf-module-topology-operation-input.service-information.service-instance-id
 + '/service-data/service-topology/'`"/>
            </set>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-level-oper-status.order-status'  value='Active' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-level-oper-status.last-rpc-action'  value='`$vf-module-topology-operation-input.sdnc-request-header.svc-action`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$tmp.vidx].vf-module-data.vf-module-level-oper-status.last-action'  value='`$vf-module-topology-operation-input.sdnc-request-header.request-action`' />
            </set>
            <update plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='wan-port-config' 
      key='wan-port-config.wan-port-config-id = $vf-module-topology-operation-input.vf-module-information.vf-module-id' >
                <parameter name="wan-port-config-id" value='`$vf-module-topology-operation-input.vf-module-information.vf-module-id`' />
                <parameter name='operational-status' value='Active' />
                <parameter name='device-port-id' value='`$prop.wan.devicePortId`' />
                <parameter name='wan-port-id' value='`$prop.wan.wanPortId`' />
            </update>
            <return status='success'>
                <parameter name="ack-final-indicator" value="Y" />
                <parameter name="error-code" value="200" />
                <parameter name="error-message" value="`$error-message`" />
            </return>
        </block>
    </method>
</service-logic>