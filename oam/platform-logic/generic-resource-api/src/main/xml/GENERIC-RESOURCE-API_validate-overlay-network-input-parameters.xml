<?xml version="1.0" encoding="UTF-8"?>
<service-logic xmlns="http://www.onap.org/sdnc/svclogic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.onap.org/sdnc/svclogic ./svclogic.xsd" module="GENERIC-RESOURCE-API" version="${project.version}">
    <method rpc="validate-overlay-network-input-parameters" mode="sync">
        <for index="idx" start="0" end="`$network-topology-operation-input.network-request-input.network-input-parameters.param_length`">
            <block atomic="true">
                <block>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'name'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.name" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_id'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.site1_id" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site2_id'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.site2_id" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_networkName'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.site1_networkName" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site2_networkName'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.site2_networkName" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_routerId'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.site1_routerId" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site2_routerId'`">
                        <outcome value="true">
                            <block>
                                <set>
                                    <parameter name="validate.dci-connects.site2_routerId" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_importRT1'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="validate.dci-connects.site1_importRT1" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site2_importRT1'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="validate.dci-connects.site2_importRT1" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_exportRT1'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="validate.dci-connects.site1_exportRT1" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_exportRT2'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="validate.dci-connects.site1_exportRT2" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site1_vni'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="validate.dci-connects.site1_vni" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'site2_vni'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="validate.dci-connects.site2_vni" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'tunnelType'`">
                        <outcome value="true">
                            <block>
                                <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`">
                                    <outcome value="">
                                        <return status="failure">
                                            <parameter name="ack-final" value="Y" />
                                            <parameter name="error-code" value="500" />
                                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                                        </return>
                                    </outcome>
                                </switch>
                                <set>
                                    <parameter name="prop.dci-connects.tunnelType" value="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`" />
                                </set>
                            </block>
                        </outcome>
                    </switch>
                </block>
                <switch test="`$validate.dci-connects.tunnelType`">
                    <outcome value="L3-DCI">
                        <execute plugin="org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils" method="requiredParameters">
                            <parameter name="`$network-topology-operation-input.network-request-input.network-input-parameters.site1_routerId`" value="" />
                            <parameter name="`$network-topology-operation-input.network-request-input.network-input-parameters.site2_routerId`" value="" />
                        </execute>
                    </outcome>
                    <outcome value="L2-DCI" />
                    <outcome value="other">
                        <return status="failure">
                            <parameter name="ack-final" value="Y" />
                            <parameter name="error-code" value="500" />
                            <parameter name="error-message" value="network-request-input.network-input-parameters.name is a required input" />
                        </return>
                    </outcome>
                </switch>
            </block>
        </for>
    </method>
</service-logic>
