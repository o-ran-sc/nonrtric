<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.onap.ccsdk.parent</groupId>
        <artifactId>odlparent-lite</artifactId>
        <version>1.4.3</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <groupId>org.onap.sdnc.oam</groupId>
    <artifactId>installation-admportal</artifactId>
    <version>1.7.3-SNAPSHOT</version>

    <name>sdnc-oam :: installation :: ${project.artifactId}</name>
    <description>Creates admportal Docker container</description>

    <properties>
        <image.name>onap/admportal-sdnc-image</image.name>
        <sdnc.project.version>${project.version}</sdnc.project.version>
        <sdnc.build.timestamp>${maven.build.timestamp}</sdnc.build.timestamp>
        <ccsdk.docker.version>0.6.3</ccsdk.docker.version>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
    </properties>


    <build>
        <plugins>

            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../TagVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.28.0</version>
                <inherited>false</inherited>
                <configuration>

                    <images>
                        <image>
                            <name>${image.name}</name>
                            <build>
                                <cleanup>try</cleanup>
                                <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                                <dockerFile>Dockerfile</dockerFile>
                                <tags>
                                    <tag>${project.docker.latestminortag.version}</tag>
                                    <tag>${project.docker.latestfulltag.version}</tag>
                                    <tag>${project.docker.latesttagtimestamp.version}</tag>
                                </tags>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-images</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>push-images</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dockerfile</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <includes>
                                        <include>Dockerfile</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-properties</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data/properties</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../src/main/properties</directory>
                                    <includes>
                                        <include>*.properties</include>
                                        <include>*.properties.sdnctldb01</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-keystores</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data/stores</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../src/main/stores</directory>
                                    <includes>
                                        <include>*.p12</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>Unzip admportal</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/unzip</executable>
                            <arguments>
                                <argument>-d</argument>
                                <argument>${basedir}/target/docker-stage/opt/onap/sdnc</argument>
                                <argument>../../admportal/target/*.zip</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>Copy admportal config</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/cp</executable>
                            <arguments>
                                <argument>../../admportal/config/admportal.json</argument>
                                <argument>${basedir}/target/docker-stage/opt/onap/sdnc/data/properties</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>Copy admportal config1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/cp</executable>
                            <arguments>
                                <argument>../../admportal/config/admportal.log4js.json</argument>
                                <argument>${basedir}/target/docker-stage/opt/onap/sdnc/data/properties</argument>
                            </arguments>
                        </configuration>
                    </execution>


                    <execution>
                        <id>change shell permissions</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/find</executable>
                            <arguments>
                                <argument>${basedir}/target/docker-stage/opt/onap/sdnc</argument>
                                <argument>-name</argument>
                                <argument>*.sh</argument>
                                <argument>-exec</argument>
                                <argument>chmod</argument>
                                <argument>+x</argument>
                                <argument>{}</argument>
                                <argument>;</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>

    </build>
    <organization>
        <name>openECOMP</name>
    </organization>
</project>
