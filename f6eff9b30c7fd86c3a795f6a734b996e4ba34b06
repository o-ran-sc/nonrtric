{
  "comments": [
    {
      "key": {
        "uuid": "14dc29a1_af10e5c2",
        "filename": "policy-agent/config/application.yaml",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-05-14T11:42:45Z",
      "side": 1,
      "message": "Trailing white space",
      "range": {
        "startLine": 32,
        "startChar": 71,
        "endLine": 32,
        "endChar": 72
      },
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "090fd654_dc405939",
        "filename": "policy-agent/config/application.yaml",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-14T11:58:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14dc29a1_af10e5c2",
      "range": {
        "startLine": 32,
        "startChar": 71,
        "endLine": 32,
        "endChar": 72
      },
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67b0c6e3_8c6b882d",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/clients/AsyncRestClient.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-05-14T11:42:45Z",
      "side": 1,
      "message": "There is quite a lot of new code introduced in this class. But there seems to be no new tests added that will cover this new functionality.",
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "789513bb_a5bfe024",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/clients/AsyncRestClient.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-14T11:58:01Z",
      "side": 1,
      "message": "This class is used in all tests in ApplicationTest (which then actually is used \u0027for real\u0027).\nThe verification of the trust is executed when trust is set to true in the application.yaml.\nHowever, I set it back to false before checking in, since that is also used in production.\nI am not sure how it is possible to have different application.yaml files for unittest and for production. It probably is, but I do not think it is needed now.",
      "parentUuid": "67b0c6e3_8c6b882d",
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99dc4fe2_b57fa065",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/clients/AsyncRestClient.java",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-05-14T11:42:45Z",
      "side": 1,
      "message": "We usually use e1.getMessage() to avoid getiing stack traces in the logs. Would that be applicable here to?",
      "range": {
        "startLine": 211,
        "startChar": 56,
        "endLine": 211,
        "endChar": 58
      },
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d320184_53e172ab",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/clients/AsyncRestClient.java",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-14T11:58:01Z",
      "side": 1,
      "message": "Yes, done.",
      "parentUuid": "99dc4fe2_b57fa065",
      "range": {
        "startLine": 211,
        "startChar": 56,
        "endLine": 211,
        "endChar": 58
      },
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "664175c7_2528fef4",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/clients/AsyncRestClient.java",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-05-14T11:42:45Z",
      "side": 1,
      "message": "We usually use e1.getMessage() to avoid getiing stack traces in the logs. Would that be applicable here to?",
      "range": {
        "startLine": 220,
        "startChar": 56,
        "endLine": 220,
        "endChar": 58
      },
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32bcb175_62d5dac3",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/clients/AsyncRestClient.java",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-14T11:58:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "664175c7_2528fef4",
      "range": {
        "startLine": 220,
        "startChar": 56,
        "endLine": 220,
        "endChar": 58
      },
      "revId": "f6eff9b30c7fd86c3a795f6a734b996e4ba34b06",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    }
  ]
}