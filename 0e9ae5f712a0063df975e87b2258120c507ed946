{
  "comments": [
    {
      "key": {
        "uuid": "eefa5e66_2ab489c6",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/controllers/PolicyController.java",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-03-11T14:41:44Z",
      "side": 1,
      "message": "What if the state is UNDEFINED?",
      "range": {
        "startLine": 170,
        "startChar": 43,
        "endLine": 170,
        "endChar": 60
      },
      "revId": "0e9ae5f712a0063df975e87b2258120c507ed946",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a31bbdd6_47786044",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/controllers/ServiceController.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-03-11T14:41:44Z",
      "side": 1,
      "message": "It would be more informative to also tell which parameter that is missing.",
      "revId": "0e9ae5f712a0063df975e87b2258120c507ed946",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41033c37_b5f2c5d8",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/controllers/ServiceRegistrationInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-03-11T14:41:44Z",
      "side": 1,
      "message": "I know this didn\u0027t change in this commit, but ask anyway. Firstly, I see both refresh and keep alive, good to use the same verywhere. Secondly, it is the service that refreshes,isn\u0027t it? So it sounds a bit misleading to say that the policies are refreshed, or is it just me that is too strict?",
      "range": {
        "startLine": 41,
        "startChar": 16,
        "endLine": 41,
        "endChar": 47
      },
      "revId": "0e9ae5f712a0063df975e87b2258120c507ed946",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a12e883_5edd3be8",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/tasks/ServiceSupervision.java",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-03-11T14:41:44Z",
      "side": 1,
      "message": "This suppression can be removed since it is no longer needed.",
      "range": {
        "startLine": 76,
        "startChar": 4,
        "endLine": 76,
        "endChar": 75
      },
      "revId": "0e9ae5f712a0063df975e87b2258120c507ed946",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab8a9ab_19af20cc",
        "filename": "policy-agent/src/main/java/org/oransc/policyagent/tasks/ServiceSupervision.java",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2020-03-11T14:41:44Z",
      "side": 1,
      "message": "Add \"@SuppressWarnings(\"squid:S2629\") // Invoke method(s) only conditionally\" before thsi method to avoid introducing new Sonar code smell.",
      "revId": "0e9ae5f712a0063df975e87b2258120c507ed946",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    }
  ]
}